name: build

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run tests
        run: poetry run invoke tests
      - name: Run linters
        run: poetry run invoke lint

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' && github.event_name!='pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Check release
        id: check_release
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry githubrelease httpx==0.18.2 autopub
          echo "release=$(autopub check)" >> $GITHUB_OUTPUT
      - name: Publish
        if: ${{ steps.check_release.outputs.release=='' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git remote set-url origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}
          autopub prepare
          poetry build
          autopub commit
          autopub githubrelease
          poetry publish -u __token__ -p $PYPI_PASSWORD
